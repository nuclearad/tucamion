<div class="row">
  <div class="col-lg-12">
    <h1 class="page-header">
      Camiones <small></small>
    </h1>
    <%= render 'admin/includes/top' %>
  </div>
</div>

<!-- /.row -->
<% if flash[:notice] %>

<%= render partial: 'shared/flashNoticeMessage' %>


<% end %>

<!-- /.row -->

<div class="row">
  <div class="col-md-3">
    <p>
      <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
        Nuevo Vehiculo
      </button>
    </p>
  </div>
  <div class="col-md-3 col-md-offset-6">
    <%= render partial: 'includes/admin_search', locals: {object: @search, search_path: request.path, query_search_field: @query_search_field} %>
  </div>
</div>

<!--Tabla normal-->
<!-- /.row-->
<div class="row">
  <div id="tabla" class="col-lg-12">
    <%= render partial: 'resultTrucks' %>
    <%= render partial: "includes/paginator_admin" , locals: {object: @trucks_filter}%>
  </div>
</div>




<!--
<div ng-controller="ctrlRead">

  <div class="table-responsive">
    <table class="table table-bordered table-hover table-striped">
    <thead>

    <tr>

      <th class="name" custom-sort order="'nombre'" sort="sort">
          Nombre

      </th>
      <th class="description" custom-sort order="'price'" sort="sort">Precio</th>
      <th class="description" custom-sort order="'nombre'" sort="sort">Usuario</th>
      <th class="field4" custom-sort order="'brand_truck.name'" sort="sort">Marca</th>
      <th class="field5" custom-sort order="'type_truck.name'" sort="sort">Tipo</th>
      <th class="field3" custom-sort order="'state.name'" sort="sort">Departamento    </th>
      <th>Acciones</th>
      <th>Estado</th>
    </tr>
    </thead>
    <tfoot>
    <td colspan="7">
      <nav>
        <ul class="pagination pull-right">
          <li ng-class="{disabled: currentPage == 0}">
            <a href ng-click="prevPage()">« Anterior</a>
          </li>

          <li ng-repeat="n in range(pagedItems.length, currentPage, currentPage + gap) "
              ng-class="{active: n == currentPage}"
              ng-click="setPage()">
            <a href ng-bind="n + 1">1</a>
          </li>

          <li ng-class="{disabled: (currentPage) == pagedItems.length - 1}">
            <a href ng-click="nextPage()">Siguiente »</a>
          </li>
        </ul>
      </nav>
    </td>
    </tfoot>

    <tbody>
    <tr ng-repeat="item in pagedItems[currentPage] | orderBy:sort.sortingOrder:sort.reverse " >

      <td>{{item.nombre}}</td>
      <td>{{item.price}}</td>
      <td>{{item.customer.name}}</td>
      <td>{{item.brand_truck.name}}</td>
      <td>{{item.type_truck.name}}</td>
      <td>{{item.state.name}}</td>
      <td>

        <a class="btn btn-info" ng-href="<%= request.original_url  %>/{{item.id}}/edit">Editar</a>
        <a class="btn btn-danger" href="<%= request.original_url  %>/{{item.id}}" data-confirm="Estas seguro de eliminar este elemento?" data-method="DELETE">Eliminar</a>
      </td>
      <td>


      <div ng-switch="item.active">
        <div ng-switch-when="1">
          <a href="<%= request.original_url  %>/updateState/{{item.id}}/1/truck" class="btn btn-success"  data-method="GET"> <i class="fa fa-check"></i></a>
          </div>
        <div ng-switch-when="0">
          <a href="<%= request.original_url  %>/updateState/{{item.id}}/0/truck" class="btn btn-danger"  data-method="GET"> <i class="fa fa-times"></i></a>
        </div>
      </div>




      </td>
    </tr>
    </tbody>
  </table>
</div>
</div>
!-->

<!-- Button trigger modal -->

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Selecione Tipo de Camion</h4>
      </div>
      <div class="modal-body">
        <%= select("post", "person_id", TypeTruck.all.collect {|p| [ p.name, p.id ] }, {prompt: 'Seleccione Tipo de camion'}, {class:'form-control'}) %>
      </div>

    </div>
  </div>
</div>






<script>
    var ready;
    ready = function() {




        $('#post_person_id').on('change', function () {
            var url = $(this).val(); // get selected value
            url = '<%= new_admin_truck_path %>?v='+url;

            if (url) { // require a URL
                window.location = url; // redirect
            }
            return false;



        });


    };

    $(document).ready(ready);
    $(document).on('page:load', ready);


</script>


<script>

    var fessmodule = angular.module('camionApp', []);

    fessmodule.controller('ctrlRead', function ($scope, $filter, $http) {

        // init

        $scope.showFrom = function(message) {
           console.log('hola')
        }

        $scope.sort = {
            sortingOrder : 'id',
            reverse : false
        };

        $scope.gap = 2;

        $scope.filteredItems = [];
        $scope.groupedItems = [];
        $scope.itemsPerPage = 5;
        $scope.pagedItems = [];
        $scope.currentPage = 0;





        $http.get("http://104.236.210.18/admin/trucks").success(function(data){
            $scope.orderByField = 'firstName';
            $scope.reverseSort = false;

            $scope.items = data;
            console.log(data)

            console.log($scope.items)

            var searchMatch = function (haystack, needle) {
                if (!needle) {
                    return true;
                }
                return haystack.toLowerCase().indexOf(needle.toLowerCase()) !== -1;
            };

            // init the filtered items
            $scope.search = function () {
                $scope.filteredItems = $filter('filter')($scope.items, function (item) {
                    for(var attr in item) {
                        if (searchMatch(item[attr], $scope.query))
                            return true;
                    }
                    return false;
                });
                // take care of the sorting order
                if ($scope.sort.sortingOrder !== '') {
                    $scope.filteredItems = $filter('orderBy')($scope.filteredItems, $scope.sort.sortingOrder, $scope.sort.reverse);
                }
                $scope.currentPage = 0;
                // now group by pages
                $scope.groupToPages();
            };


            // calculate page in place
            $scope.groupToPages = function () {
                $scope.pagedItems = [];

                for (var i = 0; i < $scope.filteredItems.length; i++) {
                    if (i % $scope.itemsPerPage === 0) {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)] = [ $scope.filteredItems[i] ];
                    } else {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)].push($scope.filteredItems[i]);
                    }
                }
            };

            $scope.range = function (size,start, end) {
                var ret = [];
                console.log(size,start, end);

                if (size < end) {
                    end = size;
                    start = size-$scope.gap;
                }
                for (var i = start; i < end; i++) {
                    ret.push(i);
                }
                console.log(ret);
                return ret;
            };

            $scope.prevPage = function () {
                if ($scope.currentPage > 0) {
                    $scope.currentPage--;
                }
            };

            $scope.nextPage = function () {
                if ($scope.currentPage < $scope.pagedItems.length - 1) {
                    $scope.currentPage++;
                }
            };

            $scope.setPage = function () {
                $scope.currentPage = this.n;
            };

            // functions have been describe process the data for display
            $scope.search();


        });






    });


    fessmodule.$inject = ['$scope', '$filter'];

    fessmodule.directive("customSort", function() {
        return {
            restrict: 'A',
            transclude: true,
            scope: {
                order: '=',
                sort: '='
            },
            template :
            ' <a ng-click="sort_by(order)" style="color: #555555;">'+
            '    <span ng-transclude></span>'+
            '    <i ng-class="selectedCls(order)"></i>'+
            '</a>',
            link: function(scope) {

                // change sorting order
                scope.sort_by = function(newSortingOrder) {
                    var sort = scope.sort;

                    console.log(newSortingOrder)

                    if (sort.sortingOrder == newSortingOrder){
                        sort.reverse = !sort.reverse;
                    }

                    sort.sortingOrder = newSortingOrder;
                };


                scope.selectedCls = function(column) {
                    if(column == scope.sort.sortingOrder){
                        return ('icon-chevron-' + ((scope.sort.reverse) ? 'down' : 'up'));
                    }
                    else{
                        return'icon-sort'
                    }
                };
            }// end link
        }
    });


</script>